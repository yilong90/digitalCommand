<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlh9QAeAIf/AAAAABAQEBERESMjIzQ0NEdHR1dXV2BgYGlpaXBwcHp6en9/f4mJiZCQkJiYmKen
        p7W1tcPDw9DQ0N3d3ezs7PDw8P///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/
        ACH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAAD/ACwAAAAA9QAeAAAI/wD/CRxIsKDBgwgTKlzIsKHDhxAj
        SpxIsaLFixgzatzIsaPHjxQBAABJsqTJkyhBihS4MqXLlzBjlmxJc6TMhgVEAmBws6fPmTZrsrT5E2FO
        kTyLKmUoYQCAAhSWdoygsyoAAgomlDy6U2rDB1yxQkjpVCQCpVZ1JmygFiHVtFUVkOSa1CtCClytDkBZ
        tUBRuG0Lsq3qFnBVAlE90mW4+KYBw3IFvm05sWqEgWUBnP0pskIFAJ5BG057cPJov4p11k3YOKYEwwIS
        /zNd0fLApk9l9+z8OfTn0VUbGDSdFEJeAA9SI2Ws+iaDqgiiSkCwmnZInZftDvXdG7jV4VVXI/+ourdj
        a9bNZeYdWziwRNva//EG3d27e8nhC2YGkF3gdAIiCVBAcgZBYIAA0AnU2gNWOWAaYQNFgACAIhWQVUGW
        UTDeVQzoZlRVAijQ30DHLecfAggO4MA/z1XIIlx+nTfbhDpZqBVBlkXwGAADKOAhQ/Z5B156AzmQn0AK
        AIYYQRtadWNjRlaV3INtaQiYAAQOJZIDCIIowUItWiUAAl8qCFdSYdaYpItp1vhPa1bChSWOOq152I8K
        BQnckCZGeGSUgKH2DwRwbfZmc00CIAB7VLZUolVZeidAmQhNMNqKh6bFE4PA+dWmi609KuVA3q0GpJ6G
        8dkVQcT9Q0GXV03/YIEEFCInUJjlFURXopPqSiSnwN1on6AIPQBrWoxC6OqxgZKKHYnpATuasJ1ChKph
        BxTUKkGAdkWoTrJaYMG3ABhwK4gGOHBjpoqSRym0fda6k3Q7bqmlouxBcCyeBE3ggLw6mTubsuRedRkF
        3QoKH7tJydvhPxLUCwCmh32Jm0i5NgRAABx37PHHIHNMGX5ECrTfZZ+mVd5raS1qJlzrEtRaggRlJnBV
        7AlU8IgKUfCAvKhZ9yK4BNmp8LMvr0ozZgHfm2Wa1m4scsdSB1D11SITRXKf/yRaXsqknbifoklbtaSv
        fS5tctPy6ZTzoAs3REFfWxOVZsxGOytSf42p//2Pzff2B/VDIlFt+NSIW521tkcaB6nOyjaU5mVcHXgn
        2qv+43BUE0icFIjsGVsVvwIZgAAEUVGQpsBCF0zAwQnrzR+8q27+T+dHLjy4Q4UnjrXvVm/MuHcCL6tT
        dBDXGlmjImlFlwTHnp10XdIaRm21CRUMF4FCv+rd0XvTnlT1gF0/+7n3LXQtXAGoqqRu5IN449huMgxx
        9LKdJ6pOkQLX6130O4yf3BM/q4DvfPYr2/ZkJ7jINURxAoHgPyRIQeG5Ly0+MkgB/6c9nRDgSemB3uUS
        KBAKSOxxsnPA2FyWkAnsDyoDHNk/yGeh+rUtfNMbiAkNk6UbInB3N2EeVoliVpAJKKBWBHhYhI5YIwfk
        j0gi9GBUZDSjzNgIQ9ihgAJSlEGmKIArA0AAz4Q2kAmgiEc8CdMB+VayKqqJiLpzYHzmWBmk0fGOB0kA
        ZQCwAL2RKgF4TEncAhnIwPAxKHsEACAJCRQcMjKQeiQKH/3IkkU+UiV2vKQmNxmTQXLyk6D8iCdDiZKA
        AAA7
</value>
  </data>
</root>